name: Deploy Main to Production
on:
    push:
        branches:
            - main
jobs:
    get-version:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: 'npm'

            - name: Cache node_modules
              uses: actions/cache@v4
              id: node-modules-cache
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

            - name: Install Dependencies
              if: steps.node-modules-cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Get Release Name
              id: release
              run: echo "VERSION=$(node -p "require('./package.json').version")-$(npx sentry-cli releases propose-version)" >> $GITHUB_OUTPUT
        outputs:
            version: ${{ steps.release.outputs.VERSION }}

    prepare-sentry:
        needs: get-version
        uses: ./.github/workflows/reusable-sentry-operations.yaml
        with:
            version: ${{ needs.get-version.outputs.version }}
            operation: prepare
        secrets:
            SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
            SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
            SENTRY_WEB_PROJECT: ${{ secrets.SENTRY_WEB_PROJECT }}
            SENTRY_API_PROJECT: ${{ secrets.SENTRY_API_PROJECT }}

    build-and-test:
        needs: prepare-sentry
        uses: ./.github/workflows/reusable-setup-build-test.yaml
        with:
            build_command: |
                npm run build:with-sentry
        secrets:
            SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

    deploy-worker:
        needs: [build-and-test, prepare-sentry]
        uses: ./.github/workflows/reusable-deploy-worker.yaml
        secrets:
            CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
            CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    finalize-sentry:
        needs: [deploy-worker, get-version]
        uses: ./.github/workflows/reusable-sentry-operations.yaml
        with:
            version: ${{ needs.get-version.outputs.version }}
            operation: finalize
        secrets:
            SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
            SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
            SENTRY_WEB_PROJECT: ${{ secrets.SENTRY_WEB_PROJECT }}
            SENTRY_API_PROJECT: ${{ secrets.SENTRY_API_PROJECT }}
