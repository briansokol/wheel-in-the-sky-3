name: 'Reusable: Setup, Build, and Test'
on:
    workflow_call:
        inputs:
            build_command:
                description: 'The command to run for building the application'
                required: true
                type: string

jobs:
    setup:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: 'npm'

            - name: Cache node_modules
              uses: actions/cache@v4
              id: node-modules-cache
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

            - name: Install Dependencies
              if: steps.node-modules-cache.outputs.cache-hit != 'true'
              run: npm ci

    validate:
        needs: setup
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: 'npm'

            - name: Cache node_modules
              uses: actions/cache@v4
              id: node-modules-cache
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

            - name: Install Dependencies
              if: steps.node-modules-cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Check Dependency Consistency
              run: npm run sherif

            - name: Check Types
              run: npm run check-types

            - name: Lint
              run: npm run lint

    build:
        needs: setup
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: 'npm'

            - name: Cache node_modules
              uses: actions/cache@v4
              id: node-modules-cache
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

            - name: Install Dependencies
              if: steps.node-modules-cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Build
              run: ${{ inputs.build_command }}

            # Cache the API public directory for downstream jobs
            - name: Cache API public directory
              id: cache-api-public
              uses: actions/cache@v4
              with:
                  path: apps/api/public
                  key: ${{ runner.os }}-api-public-${{ github.sha }}

            - name: Cache shared build directory
              id: cache-shared-dist
              uses: actions/cache@v4
              with:
                  path: packages/shared/dist
                  key: ${{ runner.os }}-shared-dist-${{ github.sha }}

            - name: Cache API handlers build directory
              id: cache-api-handlers-dist
              uses: actions/cache@v4
              with:
                  path: packages/api-handlers/dist
                  key: ${{ runner.os }}-api-handlers-dist-${{ github.sha }}

    unit-tests:
        needs: [validate, build]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: 'npm'

            - name: Cache node_modules
              uses: actions/cache@v4
              id: node-modules-cache
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

            - name: Install Dependencies
              if: steps.node-modules-cache.outputs.cache-hit != 'true'
              run: npm ci

            # Restore the API public directory cache from the build job
            - name: Restore API public directory
              id: restore-api-public
              uses: actions/cache@v4
              with:
                  path: apps/api/public
                  key: ${{ runner.os }}-api-public-${{ github.sha }}
                  fail-on-cache-miss: true

            # Restore the shared dist directory cache from the build job
            - name: Restore shared build directory
              id: restore-shared-dist
              uses: actions/cache@v4
              with:
                  path: packages/shared/dist
                  key: ${{ runner.os }}-shared-dist-${{ github.sha }}
                  fail-on-cache-miss: true

            # Restore the API handlers dist directory cache from the build job
            - name: Restore API handlers build directory
              id: restore-api-handlers-dist
              uses: actions/cache@v4
              with:
                  path: packages/api-handlers/dist
                  key: ${{ runner.os }}-api-handlers-dist-${{ github.sha }}
                  fail-on-cache-miss: true

            - name: Run Tests
              run: npm run test:ci

    e2e-tests:
        needs: [validate, build]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: 'npm'

            - name: Cache node_modules
              uses: actions/cache@v4
              id: node-modules-cache
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

            - name: Install Dependencies
              if: steps.node-modules-cache.outputs.cache-hit != 'true'
              run: npm ci

            # Restore the API public directory cache from the build job
            - name: Restore API public directory
              id: restore-api-public
              uses: actions/cache@v4
              with:
                  path: apps/api/public
                  key: ${{ runner.os }}-api-public-${{ github.sha }}
                  fail-on-cache-miss: true

            - name: Get Playwright version
              id: playwright-version
              run: echo "version=$(npm ls @playwright/test --json | jq -r '.dependencies["@repo/e2e"].dependencies["@playwright/test"].version')" >> $GITHUB_OUTPUT

            - name: Cache Playwright browsers
              id: playwright-cache
              uses: actions/cache@v4
              with:
                  path: ~/.cache/ms-playwright
                  # Create a unique cache key based on the Playwright version and OS
                  key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}

            - name: Install Playwright browsers
              if: steps.playwright-cache.outputs.cache-hit != 'true'
              run: npx playwright install --with-deps

            - name: Run Playwright Tests
              env:
                  # Set CI env var explicitly to ensure proper server handling
                  CI: 'true'
                  # Add any environment variables the server needs
                  NODE_ENV: 'test'
              # The webServer config in playwright.config.ts will handle server startup/shutdown
              run: npm run e2e:ci

            - name: Upload Playwright Report
              if: ${{ !cancelled() }}
              uses: actions/upload-artifact@v4
              with:
                  name: playwright-report
                  path: packages/e2e/playwright-report/
                  retention-days: 30
